--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: ecl_helpers
Element-Type: context
Element-Version: 2.0
Id: _Cr4zgP0jEeiNqfuAT0PA2A
Runtime-Version: 2.4.0.201812130013
Save-Time: 12/20/18 8:52 AM

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Here you find some ECL helper functions to solve often used problems.
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

proc "get-env" [val name] {
		invoke-static "org.eclipse.rcptt.util" "java.lang.System" getenv $name
}

proc "pwd" {
  // invoke-static "org.eclipse.rcptt.util" -className java.nio.file.Paths -methodName get -args "."
  get-java-property "user.dir"
}

proc "get-default-locale" {
	invoke-static "org.eclipse.rcptt.util" "java.util.Locale" getDefault
}

proc "get-user-dir" {
	invoke-static -pluginId ch.elexis.core.data -className ch.elexis.core.data.activator.CoreHub 
	-methodName getWritableUserDir
}
proc "safe-get-java-property" [val name] {
	try {
		log -message [ concat "Value of Java property xxxx is: " [ get-java-property "xxx" ] ]
	} -catch {
	    log [ concat "No such java-property: " $name ]
	    ""
	}
}

proc "get-seconds" {
	 invoke-static "org.eclipse.rcptt.util" "java.lang.System" currentTimeMillis | div 1000
}

/**
 * @input: inString a string
*/
proc "replaceFirst" [ val inString ] [ val searchPattern ] [ val replaceString] {
	$inString | invoke replaceFirst $searchPattern $replaceString
}
// replaceFirst "Welcome to Tutorialspoint.com" "(.*)Tutorials(.*)" "AMROOD" | log

proc "replaceAll" [ val inString ] [ val searchPattern ] [ val replaceString] {
	$inString | invoke replaceAll $searchPattern $replaceString
}

global [ val translations [ read-properties -uri [concat "file:" [get-user-dir] "/rcptt/translations.properties"]]]
global [ val resultsDir   [ concat "file:" [pwd] "/results/"]]

concat "get-default-locale returns: " [get-default-locale] |log
concat "user.language returns: " [ get-java-property "user.language" "dummy" ]  |log
global [ val defaultLanguage [ get-java-property "user.language" "de" ] ]
concat "defaultLanguage is now: " $defaultLanguage| log
$translations | get "de.open"| eq "Öffnen" | verify-true
proc "t" [val key] [val language $defaultLanguage] {
	try {
		// concat "Searching: " $language "." $key | log
		$translations | get [ concat $language "." $key] 
		} -catch {
		concat "Unable to fetch key " [ concat $language "." $key] " in " $translations | log
		bool false
	}
}
t "open" "de" | eq "Öffnen" | verify-true
t "open" "fr" | eq "Ouvrir" | verify-true
// t "ShouldNotBeAValidKey" "fr" | verify-false
// log "ECL done"

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--

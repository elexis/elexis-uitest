--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _QPqdkBNIEemmeedSb1JQew,_jOjx0CCAEem06Mv2pVmYtA,_LkBSkBsDEembU9g-6bJhVg
Element-Name: CheckTarmedFallVerrechnen
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _Mr6FcFFuEemrk7fLFkHFEw
Save-Time: 12/1/20 4:16 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// AbrechnungsSystemKonfigurieren
// Des muss eine Bankverbindung mit einem Kontakt erstellt werden!!

/*
SetMandantKontaktInfo 1
SetMandantenDetails 1 // Test
ChangeMandant [ GetPraxisProperty praxis.mandant.1.Name ]
*/

ImportAlleHilotecODF_Vorlagen
ConfigureHilotecODF_TextVerarbeitung

ChangeMandant [ GetPraxisProperty praxis.mandant.1.Name ]
let [ val keyId patient.100. ] {
	let [ val familyName [ concat [ GetTestProperty [ concat $keyId familyName  ] ] "-" $defaultLanguage] ]
	    [ val firstName  [ GetTestProperty [ concat $keyId firstName ] ] ]
    {
		OpenAndResetStartPerspektive
		ImportPatFallKonsFromProperty patient.100.
		let [ val invoiceId  [ GetHighestInvoiceNrOf ] ] {
			RechnungAusgeben		  -invoiceId $invoiceId
			CheckTarmedFallVerrechnen -invoiceId $invoiceId
		}
	}
}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--

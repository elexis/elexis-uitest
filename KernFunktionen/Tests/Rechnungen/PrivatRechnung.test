--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _LkBSkBsDEembU9g-6bJhVg,_jOjx0CCAEem06Mv2pVmYtA,_QPqdkBNIEemmeedSb1JQew
Element-Name: PrivatRechnung
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _gAMNcECkEeucZoJXQ1XGtg
Runtime-Version: 2.5.3.202205021448
Save-Time: 7/30/22, 10:26 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// TODO::
// Kopieren von KonsDirectVerrechnen
// Bank findet man via Raiffeisenbank
TextPluginSelect docx

get-preferences-menu | click
with [get-window [ t preferences ] ] {
    get-tree | select [ concat [ t Abrechnungssysteme ] "/Privatrechnung" ]
    with [get-editbox -after [get-label "Vorlage mit ESR" ] ] {
        set-text "Privatrechnung_EZ"
        click-text
    }
    with [get-editbox -after [get-label "Vorlage ohne ESR" ] ] {
        click-text
        set-text "Privatrechnung_S1"
    }
    get-label --after [ get-label Bank ] | click
    with [get-window [ t select_contact ] ] {
        get-editbox -index 1 | set-text Raiffeisenbank
        get-table | select "Raiffeisenbank.*"
        get-button OK | click -metaKeys ""
    }
    with [get-editbox -after [get-label "ESR-Teilnehmernummer"]] {
        set-text "01-12648-2"
        key-type "TRAVERSE_TAB_NEXT"
    }
    get-editbox -after [get-label "ESR-Kundennummer"] | set-text 15453
    with [get-button [ t Anwenden ] ] {
        click -metaKeys ""
    }
    get-button [ t apply_and_close ] | click -metaKeys ""
}

/*
TextPluginSelect hilotec_odf
Import_Text_Vorlage  $vorlagenDirOpenoffice "Privatrechnung_S1" ".odt"
Import_Text_Vorlage  $vorlagenDirOpenoffice "Privatrechnung_S2" ".odt"
Import_Text_Vorlage  $vorlagenDirOpenoffice "Privatrechnung_EZ" ".odt"
*/
// Siehe https://redmine.medelexis.ch/issues/17063
// Offener Fall mit Konsultation kann nicht verrechnet werden
ChangeMandant [ GetPraxisProperty praxis.mandant.1.Name ]
// TextPluginSelect hilotec_odf

global [ val privatPatientVorname	"Beat" ]
global [ val privatPatientName	"PrivatPatient" ]

if [ not [ SelectPatient $privatPatientName $privatPatientVorname] ] {
	PatientenErstellen  $privatPatientName $privatPatientVorname true "30.3.1990" "Nebenstrasse 66" 3340 Elexisdorf "056 323 45 67"
	SelectPatient $privatPatientName $privatPatientVorname -mustExist true
}
let [ val anfangs2022 "30.01.2022" ] [val caseLaw "privat" ] [val caseReason [t reason_KVG]] {
	if [  FallZuPatientExistiert -text "privat.*offen.*" ] {
		log "FallZuPatientExistiert"
	} -else {
		FallZuPatientErstellen -startDate $anfangs2022 -caseLaw $caseLaw -caseReason $caseReason
	}
	SelectFall -caseLaw $caseLaw -startDate $anfangs2022
	FallSetVersicherungsNummer 87654329 -fall [ concat  ".*" $caseLaw ".*"  $anfangs2022 ".*"]
	FallSetCostBearer -name "Helsana Unfall" -printId [concat $privatPatientName " "  $anfangs2022 ]
	FallSetDefaultInvoiceRecipient $privatPatientName $privatPatientVorname
	kons-erstellen [concat $privatPatientName " "  $anfangs2022 " now " [ now ] ] -createSecond true
	kons-set-date $anfangs2022
	kons-add-artikelstamm Nolvadex "Nolvadex.*100 Stk.*"
	kons-neue-diagnose [ t kons_diagnose.1.reiter ] [ t kons_diagnose.1.item ]
}
OpenAndResetStartPerspektive
let [val expectedInvoiceNr [ GetHighestInvoiceNrOf | plus 1  ] ] {
	get-view [t view_cases] | get-table | get-menu -path [t mnu_incoice_case] | click
	RechnungAusgeben -invoiceId $expectedInvoiceNr
}
/*

ImportPatFallKonsFromProperty  patient.101.

let [ val invoiceId  [ GetHighestInvoiceNrOf ] ] {
	RechnungAusgeben		  -invoiceId $invoiceId -druckTyp "Privatrechnung auf Drucker"
}
*/
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--

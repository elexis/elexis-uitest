--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: Kons
Element-Type: context
Element-Version: 2.0
Id: _yO1KQAYtEemcp9WoDsgIvA
Runtime-Version: 2.5.4.202210020716
Save-Time: 11/23/22, 9:33 AM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

global [ val Losartan "Losartan Sandoz Filmtabl 100 mg 98 Stk.*" ] -override
global [ val konsDirektVorname	"Albert" ] -override

proc "KonsErstellenFallsNichtVorhanden" [ val text2enter "NixZuTUn" ] {
	if [ HasKonsSelected | eq false] {
		concat "KonsErstellen: text2enter " $text2enter | log
		kons-erstellen -text2enter $text2enter
	} -else {
		log "KonsErstellenFallsNichtVorhanden: HasKonsSelected returned true"
	}
}
proc "kons-erstellen" [ val text2enter "NixZuTUn" ] [ val createSecond false ] {
	get-eclipse-window | gen-screenshot [concat $imagesDir "Before_kons_Erstellen.png"]
	t kons_create_new | log
	open-window-by-name [ t kons_view ] | get-button [ t kons_create_new ] | click
	try {
		get-view [ t kons_view ] | get-editbox -index 1 | type-text $text2enter
	} -catch {
		log "Workaround: new kons not displayed"
	// TODO: Force closing then opening Konsultation necessary?
	// TODO: Is this an RCPTT problem??
		get-eclipse-window | gen-screenshot [concat $imagesDir "ERROR_must_i_close_the_kons.png" ]
		if [ $createSecond ] {
			close-window-if-open [ t zweite_kons_erlaubt ]
		}
		get-view [ t kons_view ] | close
		open-window-by-name  [ t kons_view ]
		get-view [ t kons_view ] | get-editbox -index 1 | type-text $text2enter
		get-eclipse-window | gen-screenshot [concat $imagesDir "ERROR_reopened_kons.png" ]
	}
}

proc "HasKonsSelected" {
	try {
		// TODO: Force closing then opening Konsultation necessary?
		// TODO: Is this an RCPTT problem??
		get-view [ t kons_view ] | close
		open-window-by-name  [ t kons_view ]
		get-view [ t kons_view ]  | get-label -index 0 | get-property caption -raw | log
		get-view [ t kons_view ]  | get-link "\(.*\)" | get-property caption -raw | log
		get-view [ t kons_view ]  | get-label -index 0 | get-property caption | equals  [ t lbl_no_kons_selected ] | verify-false
		get-view [ t kons_view ]  | get-link "\(.*\)" | get-property caption  | equals "\(.*\)" | verify-true
		bool true
	} -error [val errorObj] -catch {
		log "HasKonsSelected: " [$errorObj | get message]
		bool false
	}   
}
	

proc "PressAddDiagnosisToKons" {
	with [get-view  [ t kons_view ] | get-button [ t btn_add_diagnoses ] ] {
		click
	}
}

proc "PressAddLeistungToKons" {
	KonsCloseCannotBeChangedError
	try {
		with [get-view  [ t kons_view ] | get-button [ t btn_add_invoicable_item ] ] {
			click
	}	} -error [val errorObj] -catch {
		concat "PressAddLeistungToKons failed: " [$errorObj | get message] | log
		close-window-if-open [ t window_warning ]
	}
	get-view [ t leistungen ] | maximize // allow finding blocks etc
}

proc "ActivateVisibleKonsView" {
	concat "ActivateVisibleKonsView " [ t kons_view ] | log
	try {
		get-view [ t kons_view ] | get-editbox | set-focus
		log "ActivateVisibleKonsView no problems"
		bool true
	}  -error [val errorObj]  -catch {
		concat "ActivateVisibleKonsView " [ t kons_view ]  " has problems." [$errorObj | get message] " Trying to close warning" | log
		close-window-if-open [ t window_warning ]
		close-window-if-open [ t window_warning ]
		close-window-if-open [ t window_warning ]
		close-window-if-open [ t window_warning ]
		get-view [ t kons_view ] | get-editbox | set-focus
		bool false
	}
}

proc "kons-neue-diagnose" [ val reiter ] [ val item ] {
	ActivateVisibleKonsView
	PressAddDiagnosisToKons
	with [get-view [ t diagnosen ] ] {
		get-group [ t alle_leistungen ] | get-editbox | set-focus
		get-tab-folder | get-tab-item $reiter | click
		with [get-group [ t alle_leistungen ]] {
			get-tree | select [ concat ".*" $item ] | double-click
		}
	}

	// Close Leistungen
	ActivateVisibleKonsView 
	concat "kons-neue-diagnose added " $reiter " " $item | log
}

proc "kons-check-expected-items" [ val caller ]
	[ val item "" ]
	[ val nrItemsBefore 0 ] {
	let [ val nrItemsAfter [ kons-get-nr-invoiced-items ] ] {
		let [ val infoMsg
			[ concat $caller " expectedItemsAdded failed: Added " $item  " nrItemsBefore " $nrItemsBefore " now we have " $nrItemsAfter " items" ]
			]
		{
			$infoMsg | log
			if [ $nrItemsBefore | lt $nrItemsAfter] {
				concat $caller " expectedItemsAdded passed: Added " $item | log
			} -else {
				$infoMsg | log
				// bool false | assert-true -message $infoMsg
			}
		}
	}
}

proc "GetItemsInTable" [ val table "NotableGiven" ] {
	$table | get-property itemCount -raw
}

proc "ArtikelstammExecuteSearch" {
	concat "ArtikelstammExecuteSearch started" | log
    let [ val table [ get-view [ t artikel ] | get-table ] ] {
		let	[ val nrItemsBefore [ GetItemsInTable $table | int ] ] {
			get-button [ t btn_execute_search ] | click
			loop  [ val level 0 ] {
				concat "GetItemsInTable level " $level " before " $nrItemsBefore " now " [ GetItemsInTable $table ] " for " [  t artikel ] | log
			    if [ GetItemsInTable $table | eq $nrItemsBefore ] {
					if [ $level | eq 10 ] {
					  concat "ArtikelstammExecuteSearch level " $level " too high" | log
					} -else {
						wait 500
						recur [$level | plus 1]
					}
			    }
			}
		}
	}
	concat "ArtikelstammExecuteSearch finished" | log
}

proc "LeistungenExecuteSearch" {
	concat "LeistungenExecuteSearch started" | log
    let [ val table [ get-view [ t leistungen ] | get-group [ t alle_leistungen ] | get-table ] ] {
		get-button [ t btn_execute_search ] | click -metaKeys ""
		loop [ val level 0 ] {
			concat "GetItemsInTable level " $level " kons " $nrItemsBefore " leistungen " [ GetItemsInTable $table ] " for " [  t leistungen ] | log
			get-eclipse-window | gen-screenshot [concat $imagesDir "kons-before_" $level "_" $item_short ".png"]
			try {
			get-group  [ t alle_leistungen ] | get-table | select $item_long | click -default
			} -catch {
				if [ $level | eq 10 ] {
				  concat "LeistungenExecuteSearch level " $level " too high" | log
				} -else {
					wait 500
					recur [$level | plus 1]
			    }
			}
		}
	}
	concat "LeistungenExecuteSearch finished" | log
}

/**
 * Das geht eine Ewigkeit, weil rcptt sich den ganzen Artikelstamm ins Memory lädt!!
 * <br>Der Name muss so gewählt werden, dass kein hellblau eingefärbter Artikel als erster in der
 * Auswahl erscheint, da diese nicht verrechnet werden können
*/
proc "kons-add-artikelstamm" [ val item_short ] [ val item_long ] {
	let [val nrItemsBefore [ kons-get-nr-invoiced-items ] ] {
		concat "kons-add-artikelstamm: " $item_short " have before " $nrItemsBefore " items. " $item_long | log
		PressAddLeistungToKons
		concat "PressAddLeistungToKons "  $item_short " done" | log
		get-eclipse-window | gen-screenshot [concat $imagesDir "kons-added_" $item_short ".png"]
		concat "PressAddLeistungToKons "  $item_short " after screenshot" | log
		SelectArtikelitemInTab $item_short $item_long
		get-group [ t alle_leistungen ] | get-table | select $item_long | double-click
		with [get-view [t leistungen ] ] {
			get-eclipse-window | gen-screenshot [concat $imagesDir "kons-before_enter2_" $item_short ".png"]
			key-type Enter
		}
		concat "kons-neuen-artikelstamm item added " $item_short " " $item_long | log
		get-view [ t leistungen ] | restore
		ActivateVisibleKonsView
		get-eclipse-window | gen-screenshot [concat $imagesDir "kons-added_" $item_short ".png"]
		kons-check-expected-items -caller "kons-add-artikelstamm" -item $item_short -nrItemsBefore $nrItemsBefore
	}
}

proc "kons-add-eigenleistung" [ val itemName  "MeineBesteLeistung" ] {
	ActivateVisibleKonsView
	let [val nrItemsBefore [ kons-get-nr-invoiced-items ] ] {
		PressAddLeistungToKons
		with [get-view [ t leistungen ] ] {
			get-button [ t btn_show_list ] click
			get-tab-folder | get-tab-item Eigenleistung | click
			with [get-group [ t alle_leistungen ] ] {
			get-editbox -after [get-label Code] | set-focus
			get-table | select $itemName | double-click
			}
		}
		// Close Leistungen
		ActivateVisibleKonsView 
		kons-check-expected-items -caller "kons-add-eigenleistung" -item $itemName
			-nrItemsBefore $nrItemsBefore
	}
}

proc "toggle-tarmed-kontext" {
	open-window-by-name [ t leistungen ]
	with [get-view [ t leistungen ] ] {
		with [ get-group [ t alle_leistungen ] ] {
			get-button [ t tarmed_kontext_aktivieren ] | click
		}
	}
}
/**
 * Select a tarmed by it position. As RCPTT replace a leading 00.0 by 0.0
 * you must enter values like %00.0010 as we will strip all %
 * RCPTT is only to able to select a single item if the full path is given, eg.
 * "00 Grundleistungen \\(KVG\\)/00.01 Allgemeine Grundleistungen \\(KVG\\)/00.01.01 Konsultation, Besuch, Wegentschädigung u.a. \\(KVG\\)/00.0025 \\+ Konsultation bei Kindern unter 6 Jahren und Personen über 75 Jahren, jede weiteren 5 Min. \\(KVG\\)"
 * 
 * Double-clicks on the selected tarmed to add it
 */
proc "select-tarmed-leistung" [ val ziffer [ concat "00.0010" ] ] {
	open-window-by-name [ t leistungen ]
	concat "select-tarmed-leistung " $ziffer | log
	with [get-view [ t leistungen ] ] {
		get-button [ t btn_show_list ] click
		get-tab-folder | get-tab-item Tarmed | click
		with [ get-group [ t alle_leistungen ] ] {
			// Ensure that we really see all tarmed items for the kontext
			get-button [ t btn_automatic_search ] | check
			if [ get-tree | get-property itemCount -raw | matches "0" ] {
				// get-button [ t tarmed_kontext_aktivieren ] | click
				get-button [ t btn_execute_search ] | click
				get-tree | get-property itemCount -raw | log
			}
			// disable automatic search if necessary
			get-button [ t btn_automatic_search ] | uncheck
			get-tree | get-property itemCount -raw | log
			if [ $ziffer | matches "[0-9][0-9]\..*" ] {
				with [get-editbox -after [get-label Ziffer]] {
					set-text $ziffer
				}
				get-button [ t btn_execute_search ] | click
				loop [val i 0] {
					try {
							if [get-tree | get-item ".*" | get-property childCount -raw | eq 1 ] {
								concat "select-tarmed-leistung found with i " $i " childCount: <" [ get-tree | get-item ".*" | get-property childCount -raw ] ">" | log
							} -else {
								concat "select-tarmed-leistung must wait i: " $i " childCount: <" [ get-tree | get-item ".*" | get-property childCount -raw ] ">" | log
								wait 500 // TODO: Why do we need this delay? This takes time sometimes
								if [ $i | lt 10 ] { recur [$i | plus 1] }
							}
					} -catch {
						concat "select-tarmed-leistung unable to get childCount i: " $i | log
						wait 500 // TODO: Why do we need this delay? This takes time sometimes
						if [ $i | lt 10 ] { recur [$i | plus 1] }
					}
				}
				get-eclipse-window | gen-screenshot [concat $imagesDir "select-tarmed-leistung_" $ziffer ".png"]
				try {
					concat "select-tarmed-leistung via Ziffer for: " $ziffer | log
							get-tree | select [ concat ".*/.*/" $ziffer ".*" ] | double-click
					log "select-tarmed-leistung done 1"
					bool true
				} -error [ val errorObj ] -catch {
					try {
						concat "select-tarmed-leistung try 2: " [$errorObj | get message] " " $ziffer ".*" | log
						get-tree | select [ concat ".*/.*/.*/" $ziffer ".*" ] | double-click
						log "select-tarmed-leistung done 2"
						bool true
					} -error [ val errorObj2 ] -catch {
						try {
							concat "select-tarmed-leistung try 3: " [$errorObj2 | get message] " " $ziffer ".*" | log
							get-tree | select [ concat ".*/.*/.*/.*/" $ziffer ".*" ] | double-click
							log "select-tarmed-leistung done 3"
							bool true
						} -error [ val errorObj3 ] -catch {
							concat "select-tarmed-leistung failed adding " $ziffer " " [$errorObj3 | get message]| log
							bool false
						}
					}
				}
			} -else {
				concat "select-tarmed-leistung via expand-all for: " $ziffer | log
				get-tree | expand-all
				// Select just the first element
				get-tree | select [ concat ".*/.*/.*/.*" $ziffer ".*" ] | double-click
				bool true
			}
		}
	}
}

/**
 * Adds a given tarmed number. If it starts (or ends) with 0 you must call it like
 * <BR>kons-add-tarmed [ concat "00.0010"]
 * <br>this prevents converting the string to a float
*/
proc "kons-add-tarmed" [ val ziffer ] {
	let [val nrItemsBefore [ kons-get-nr-invoiced-items ] ] {
		concat "kons-add-tarmed: " $ziffer " have " $nrItemsBefore " items"| log
		PressAddLeistungToKons
		select-tarmed-leistung $ziffer
		close-window-if-open [ t window_warning ]
		try {
			get-view [ t leistungen ] | get-group [ t alle_leistungen ] | get-tree | double-click
		} -catch {
			log "kons-add-tarmed must toggle-tarmed-kontext"
			toggle-tarmed-kontext
			select-tarmed-leistung $ziffer
			get-view [ t leistungen ] | get-group [ t alle_leistungen ] | get-tree | double-click
		}
		close-window-if-open [ t window_warning ]
		get-view [t leistungen ] | minimize
		
		// Close Leistungen
		ActivateVisibleKonsView
		kons-check-expected-items -caller "kons-add-tarmed" -item $ziffer
			-nrItemsBefore $nrItemsBefore
	}
	// TODO: This fails with NullPointerException and does not populate the Verrechnung
	// Not checking for this condition at the moment
	get-eclipse-window | gen-screenshot  [concat $imagesDir "kons-add-tarmed_done_" $ziffer ".png"]
}
/**
 * Adds a given complementary tarif position

*/
proc "kons-add-complementary" [ val ziffer 1255 ]  { // 1255 /Blutege
	let [val nrItemsBefore [ kons-get-nr-invoiced-items ] ] {
		concat "kons-add-complementary: " $ziffer " have " $nrItemsBefore " items"| log
		PressAddLeistungToKons
		get-tab-folder | get-tab-item [ t Komplementaermedizin ] | click
		with [get-group [ t alle_leistungen ]] {
			get-editbox -after [get-label Code ] | set-text $ziffer
			try {
				get-button [ t btn_execute_search ] | click
				get-eclipse-window | gen-screenshot [concat $imagesDir "kons-add_complementary_before_" $ziffer ".png"]
				concat "Search for:<.*" $ziffer ".*" ">" |log 
				get-table | select [get-item -path [ concat ".*" $ziffer ".*" ] ] | double-click
				concat "kons-add-complementary: " $ziffer " double-click done" | log
			} - -error [val errorObj] -catch {
				concat "kons-add-complementary: " $ziffer " double-click failed: " $[$errorObj | get message]| log
			}
		}
		ActivateVisibleKonsView
		get-eclipse-window | gen-screenshot [concat $imagesDir "kons-added_" $ziffer ".png"]
		kons-check-expected-items -caller "kons-add-complementary" -item $ziffer
	}
}

proc "preferences-use-macros-with-TI-and-Favoriten" {
	get-preferences-menu | click
	with [get-window [ t preferences ]] {
		get-tree | select [ t Anwender_Texteingabe ]
		get-editbox -after [get-label [ t Makro_Zeichen ] ] | set-text "$"
		get-button	[ t Makros_Verrechenbar_Favoriten ] | check
		try {
			get-button [ t TI_Diagnosen ] | check
		} -catch {
			concat "preferences-use-macros-with-TI-and-Favoriten button "  [ t TI_Diagnosen ] " not found" | log
		}
		get-button [ t apply_and_close ] | click
	}
}

proc "select-block" [ val blockName "arzt_Berichte"] {
	open-window-by-name [  t leistungen ]
	with [get-view [  t leistungen ]] {
		restore
		get-button [ t btn_show_list ]| click
		get-tab-folder | get-tab-item Block | click
		with [get-group [ t alle_leistungen ]] {
			get-editbox -after [get-label Name ] | set-text $blockName
			get-button [ t btn_execute_search ] | click
		}
	}
	try {
		get-view [  t leistungen ] | get-group [ t alle_leistungen ] | get-tree | select [ concat $blockName ".*"]
		concat "found block " $blockName | log
		bool true
	 } -catch {
		concat "Unable to find block " $blockName | log
		bool false
	}
}

proc "kons-get-nr-invoiced-items" {
	get-view [ t kons_view ] | click
	global [val konsNrItems  [get-view [ t kons_view ] | get-table -after [get-label [t btn_accounting ] ] |
			get-property  "getItems().length"  -raw] ] -override
	if [ $konsNrItems | int | eq 0 ] {
			concat "kons-get-nr-invoiced-items will wait as " $konsNrItems " is 0" | log
			wait 3000
			global [val konsNrItems  [get-view [ t kons_view ] | get-table -after [get-label [t btn_accounting ] ] |
					get-property  "getItems().length"  -raw] ] -override
			concat "kons-get-nr-invoiced-items after wait is " $konsNrItems | log
	}
	concat "kons-get-nr-invoiced-items returns: " $konsNrItems | log
	$konsNrItems | int
}

proc "kons-get-invoiced-amount" {
	get-view [ t kons_view ] | click
	get-view  [ t kons_view ] | get-editbox -after [get-label [t btn_accounting ]] | get-property text -raw
}

proc "kons-add-macro" [ val macroName "soap" ] {
	get-view [ t kons_view ] | click
	with [get-view [ t kons_view ]] {
		click
		with [get-editbox ] {
			set-text-offset 0 0
			type-text "soap$"
			let [ val content [ get-property text ] ] {
				concat "+xxx" content | log
			}
		}
	}
}

proc "kons-add-block" [ val blockName "arzt_Besuch (KVG)" ]
	[ val info "Für Fehlermeldungen" ] {
	let [val nrItemsBefore [ kons-get-nr-invoiced-items ] ] {
		concat "kons-add-block: " $blockName " have " $nrItemsBefore " items"| log
		PressAddLeistungToKons
		get-tab-folder | get-tab-item Block | click
		with [get-group [ t alle_leistungen ]] {
		get-editbox -after [get-label Name ] | set-text $blockName
		try {
				get-button [ t btn_execute_search ] | click -metaKeys ""
				get-eclipse-window | gen-screenshot [concat $imagesDir "kons-add_block_before_" $blockName ".png"]
				get-tree | select [get-item -path $blockName ] | double-click
				// Hier kommt die fürchterliche Warnung folgende Leistung konnte
				// im aktuellen Kontext Fall Konsultation Gesetz nicht verrechnet werden
				concat "kons-add-block: " $blockName " double-click done" | log
			} -catch {
			concat "kons-add-block: " $blockName " double-click failed" | log
			}
		}
		get-view [t leistungen ] | minimize
		ActivateVisibleKonsView
		wait 100
		get-eclipse-window | gen-screenshot [concat $imagesDir "kons-added_" $blockName ".png"]
		kons-check-expected-items -caller [ concat "kons-add-block: for " $info ] -item $blockName
			-nrItemsBefore $nrItemsBefore
	}
}

/**
 * newKonsDate must have form dd.mm.yy (d.m.yyyy is NOT possible)
 * <br>newKonsDate must be valid. Eg. 30.2.2010 will not be accepted
 *
 */
proc "kons-set-date" [ val newKonsDate $aWeekAgo ] {
	concat "kons-set-date must set: " $newKonsDate | log
	try {
		get-view [ t kons_view ] | get-menu -path [ t Kons_Datum ] | click
		with [get-window [ t enter_date ] ] {
		    with [get-canvas] {
		        click
		        click
		        key-type Up
		    }
		    get-button OK | click -metaKeys ""
		}
	} -error [val errorObj] -catch {
		concat "kons-set-date: " [$errorObj | get message] " could not open menu " [ t Kons_Datum ]  | log 
	}
	try {
		let [val myKonsDate  [ get-view [ t kons_view ] | get-label  -index 1| get-property caption -raw  ] ]
		{
			concat "MyKonsDate is: " $myKonsDate | log
			$myKonsDate | matches  [ concat $newKonsDate ".*" ]  | assert-true
				-message [ concat "Konsdate should match "  $newKonsDate " but is " $myKonsDate ]
			concat $imagesDir "kons_" [ replaceAll $myKonsDate "\W" "" ] "_set.png" | log
			// fails get-view Consultation | gen-screenshot -out [concat $imagesDir "kons_.png" ]
			// works, but only display konstext get-view  gen-screenshot -out [concat $imagesDir "kons_"  [ replaceAll $myKonsDate "\W" "_" ] "_set.png"]
			get-eclipse-window| gen-screenshot -out [concat $imagesDir "kons_"  [ replaceAll $myKonsDate "\W" "_" ] "_set.png"]
			// fails too: get-view [ t kons_view ] | get-editbox | get-object | gen-screenshot -out [concat $imagesDir "kons_"  [ replaceAll $myKonsDate "\W" "_" ] "_set.png"]
			// fails too: get-view [ t kons_view ] | get-editbox | invoke getParent | gen-screenshot -out [concat $imagesDir "kons_2_"  [ replaceAll $myKonsDate "\W" "_" ] "_set.png"]
			// fails with NPE: get-view [ t kons_view ] | get-editbox | invoke getParent| invoke getParent | gen-screenshot -out [concat $imagesDir "kons_3_"  [ replaceAll $myKonsDate "\W" "_" ] "_set.png"]
		}
	}  -error [val errorObj] -catch {
		concat "kons-set-date failed: " $newKonsDate " err: "  [$errorObj | get message] | log
		KonsCloseCannotBeChangedError
	}
}

proc "KonsCloseCannotBeChangedError" {
	try {
		get-window [ t kons_kann_nicht_geaendert_werde ] | gen-screenshot -out [concat $imagesDir "KonsCloseCannotBeChangedError.png"]
		concat "KonsCloseCannotBeChangedError Pressing OK" | log
		get-window [ t kons_kann_nicht_geaendert_werde ] | get-button OK | click
		concat "KonsCloseCannotBeChangedError Done" | log
		bool true
	} -error [val errorObj] -catch {
		concat "KonsCloseCannotBeChangedError err: "  [$errorObj | get message] | log
		bool false
	}
}

proc SelectPatFallKonsFromProperty [ val keyId ] [ val abortOnError true ] [ val caseStatus ".*" ] {
	let [ val familyName [ concat [ GetTestProperty [ concat $keyId familyName  ] ] "-" $defaultLanguage] ]
	    [ val firstName  [ GetTestProperty [ concat $keyId firstName ] ] ]
	    [ val male		 [ GetTestProperty [ concat $keyId male      ] ] ]
	    [ val caseName	 [ GetTestProperty [ concat $keyId caseName  ] ] ]
	    [ val blockNr	 [ GetTestProperty [ concat $keyId blockNr   ] 4 ] ]
	    [ val tarmed	 [ GetTestProperty [ concat $keyId tarmed    ] [ concat "10.0010" ] ] ]
	    [ val birthDate  [ GetTestProperty [ concat $keyId birthDate ] "29.02.1984" ] ]
	    [ val blockName	 [ GetTestProperty [ concat $keyId blockName ] "kons plus (KVG)" ] ]
    {
		if [ $firstName | equals "" ] {
			concat "SelectPatFallKonsFromProperty found no entry with key " $keyId | log
			bool false | assert-true -message [ concat "SelectPatFallKonsFromProperty found no entry with key " $keyId ]
		} -else {
			concat "SelectPatFallKonsFromProperty started with key " $keyId " " $firstName " " $familyName | log
			OpenAndResetStartPerspektive
			SelectPatientMitFallUndKons -familyName $familyName
			 -firstName $firstName -birthDate $birthDate -male $male
			 -caseName $caseName -caseIsOpen $caseStatus
		}
	}
}
proc ImportPatFallKonsFromProperty [ val keyId ] [ val abortOnError true ] {
	let [ val familyName [ concat [ GetTestProperty [ concat $keyId familyName  ] ] "-" $defaultLanguage] ]
	    [ val firstName  [ GetTestProperty [ concat $keyId firstName ] ] ]
	    [ val male		 [ GetTestProperty [ concat $keyId male      ] ] ]
	    [ val caseName	 [ GetTestProperty [ concat $keyId caseName  ] ] ]
	    [ val blockNr	 [ GetTestProperty [ concat $keyId blockNr   ] 4 ] ]
	    [ val tarmed	 [ GetTestProperty [ concat $keyId tarmed    ] [ concat "10.0010" ] ] ]
	    [ val birthDate  [ GetTestProperty [ concat $keyId birthDate ] "29.02.1984" ] ]
	    [ val blockName	 [ GetTestProperty [ concat $keyId blockName ] "kons plus (KVG)" ] ]
    {
		if [ $firstName | equals "" ] {
			concat "ImportPatFallKonsFromProperty found no entry with key " $keyId | log
		} -else {
			concat "ImportPatFallKonsFromProperty started with key " $keyId " " $firstName " " $familyName | log
			OpenAndResetStartPerspektive
			PatientMitFallUndKonsErstellenOderAuswaehlen -familyName $familyName
			 -firstName $firstName -birthDate $birthDate -male $male
			 -caseName $caseName
			PatientMustBeSelected -familyName $familyName -firstName $firstName
			FallSetVersicherungsNummer -fall $caseName
			FallSetCostBearer -name $default_KK -printId [ concat $familyName " " $firstName ]
			FallSetDefaultInvoiceRecipient  $familyName $firstName
			// AllVerrechnungenEntfernen
			DiagnoseEntfernen
			kons-add-tarmed [ concat $tarmed ]
			kons-add-artikelstamm -item_short Losartan -item_long $Losartan
			kons-neue-diagnose [ t kons_diagnose.1.reiter ] [ t kons_diagnose.1.item ]
			kons-add-block  -blockName $blockName -info [ concat  $firstName " " $familyName ]
			close-window-if-open [t window_warning]
			AktuellenFallVerrechnen -abortOnError $abortOnError -label [ concat $familyName "-" $firstName "-" $caseName ]
			AktuellenFallSchliessen
		}
	}
}

proc AllVerrechnungenEntfernen {
	with [get-view [ t kons_view ] | get-table -after [ get-label [ t btn_accounting ] ] ] {
		try {
		 t path_remove_all | log
			get-cell 0 2 |  mouse down Right -count 1
			get-menu -path [ t path_remove_all  ] | click
			try {
				get-window [ t window_warning ] | close
			}  -error [val errorObj] -catch {
				concat "AllVerrechnungenEntfernen no warning found: "  [$errorObj | get message] | log
			}
			close-window-if-open [ t window_warning ]
			log "AllVerrechnungenEntfernen. Done"
		} -error [val errorObj] -catch {
			concat "AllVerrechnungenEntfernen Nix zu tun!"  [$errorObj | get message] | log
		}
	}
}

proc DiagnoseEntfernen { 
	with [get-view [ t kons_view ] ] {
			    try { with [get-table] {
					get-cell 0 2 | click
				    get-menu -path [ t path_remove_diagnosis ] | click
	    			log "DiagnoseEntfernen. Done"
				    
				} 
			} -catch { 
				log -message "No diagnosis to remove"
			}
		}
}

proc EnableTab [ val view_name "Diagnose" ] [ val tab_name "Eigendiagnosen" ] {
	get-preferences-menu | click
	with [ get-window [ t preferences]] {
	    get-tree | select [ t preferences_user_tabs ]
	    get-combo -after [get-label [t prefs_user_services_view]] | select $view_name
	    try { // to move from availabe tabs to selected tabs
			with [get-table -after [get-label [ t preferences_user_available_tabs ]] -index 1] {
			concat "EnableTab: View name is " $view_name " tab_name is " $tab_name | log
			select $tab_name
			with [get-item -path $tab_name] {
			    drag-start 56 6
			    drag-enter 49 11 -detail move
			    drag-over "-4" 23 -detail move
			    drag-exit
			    }
			}
		    with [get-table] {
		        drag-enter 316 74 -detail move
		        drag-over 92 36 -detail move
		        drag-exit
		        drag-accept 92 36 -detail move
		    }
		    get-table -after [get-label [ t preferences_user_available_tabs ]] -index 1 | drag-set-data
		    get-table | drop 92 36 -detail move
		    get-table -after [get-label [ t preferences_user_available_tabs ]] -index 1 | drag-end -detail move
		}  -error [val errorObj] -catch {
			concat "EnableTab: Unable to move " $view_name " tab " $tab_name " err: "  [$errorObj | get message] | log
	    }
	    get-combo -after [get-label [t prefs_user_services_view]] | select $view_name
	    get-table | select $tab_name
		concat "EnableTab: EnableTab " $view_name " tab " $tab_name " selected is shown" | log
	    get-button [ t Anwenden ] | click -metaKeys ""
	    get-button [ t apply_and_close ] | click -metaKeys ""
	}
}

proc "SelectLastPrescripion" {
	ActivateVisibleKonsView
	with [get-view [t prescription_view]] {
	    click
		try {
		    let [ val nrItems [  get-table | get-item -path ".*" | get-property "getParent().getItems().length" -raw ] ] {
				concat "SelectLastPrescripion: My last item has index " [ minus $nrItems 1 | int ] | log
					get-table | select [get-item -path ".*" -index [ minus $nrItems 1 | int ]  ]
		    }
		} -catch {
			concat "SelectLastPrescripion: okay if nrItems is 0" |log
		}
	}
}

proc "SetLongMediName"  [ val itemName "Nolvadex" ] [ val longName "" ] {
	if [$longName | eq ""]  {
		global [val longMediName [ concat  $itemName ".*Stk.*" ]] -override
	} -else {
		global [val longMediName [ concat  $longName]] -override
	}
	concat "SetLongMediName <" $longMediName ">" | log
}

proc "CreatePrescription"  [ val itemName "Nolvadex" ] [ val longName "" ] {
	SetLongMediName $itemName $longName
	ActivateVisibleKonsView
	get-view [t prescription_view ] | click
	with [get-view [t prescription_view]] {
	    get-button [ t prescription_create_one] | click -metaKeys ""
	}
	SelectArtikelitemInTab -shortName $itemName -longName $longMediName 
	get-view [t leistungen ] | get-group [t alle_leistungen] | get-table | select $longMediName | double-click
}

proc "AddMediToPrescription" [ val itemName "Nolvadex" ]  [ val longName "" ] [ val morning 0 ] [ val lunch 0 ] [ val supper 0 ]
	[ val night 0] [ val instructions "" ] [ val reason "" ] [ val isReserve [ bool false ] ] [ val freetext "" ] {
	SetLongMediName $itemName $longName
	SelectLastPrescripion
	get-view [t prescription_view] | get-button [t prescription_new_line]| click -metaKeys ""
	SelectArtikelitemInTab -shortName $itemName -longName $longMediName
	get-view [t leistungen ] | get-group [t alle_leistungen] | get-table | select $longMediName | double-click
	get-view [t prescription_view] | get-list | select $itemName| get-menu -path [t prescription_change] | click -metaKeys ""
	with [get-window [t prescription_detail]] {
		get-editbox | get-property "getMessage()" -raw | log
		if [ get-editbox | get-property "getMessage()" -raw | equals [t prescription_freetext_default] ] {
			get-button [t prescription_activate_freetext] | click -metaKeys ""
		}
	    get-editbox -index 0 | set-text $morning
	    get-editbox -index 1 | set-text $lunch
	    get-editbox -index 2 | set-text $supper
	    get-editbox -index 3 | set-text $night
	    get-editbox -index 4 | set-text $instructions
	    if [ concat $freetext "" | eq "" ] {
			log "Rezepte: No  Freetext"
	    } -else {
			concat "Rezepte: must add freetext " $freetext | log
		    get-button [t prescription_activate_freetext] | click -metaKeys ""
		    get-editbox | set-text $freetext
	    }
	    if [ $isReserve | eq true ] {
		    get-button [t prescription_reserve ] | check
	    }
	    get-button [ t ok ] | click -metaKeys ""
	}
}

proc "PrintPrescription" {
	log "PrintPrescription starting"
	SelectLastPrescripion
	get-view [t prescription_view] | get-button [t print_prescription ] | click -metaKeys ""
	try {
		get-window  "Rezept erstellen" | get-button "Rezept neu erstellen" | click
		log "Rezept existiert schon, überschreien"
	} -catch {
		log "No existing medication"
	}
	log "PrintPrescription done"
}

// ENDE

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--

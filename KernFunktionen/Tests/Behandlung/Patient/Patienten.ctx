--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: Patienten
Element-Type: context
Element-Version: 2.0
Id: _dgccYP7qEeiuqdAcgkHVvQ
Runtime-Version: 2.4.1.201903190000
Save-Time: 4/2/19 5:28 PM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

proc RechnungAusgebenAlt [ val invoiceListViewName "Rechnungsliste.*beta.*" ] [val betrag "60.0.*" ] [val patient "Duck Donald"] {
	open-window-by-name $invoiceListViewName
	get-view  $invoiceListViewName | get-table | log
	// get-row-header  is not yet defined in 2.3.0
	// get-view  $invoiceListViewName | get-table | get-row-header | log
	get-view  $invoiceListViewName | get-table | get-table-data | log
	log Duck
	get-view  $invoiceListViewName | get-table | get-table-data | select-rows  -match regexp  -column "Patient"  -value ".*Duck.*" |log
	// get-column-header not yet defined in 2.3.0
	get-view  $invoiceListViewName | get-table | get-column-header | log
	get-view  $invoiceListViewName | get-table | get-table-data | select-rows  -match regexp
	 -column "Patient"  -value ".*Duck.*"  | log
//	get-view  $invoiceListViewName | get-table | get-table-data | select-rows  -match regexp
//		 -column "Patient"  -value ".*Duck.*" | get-property "columns[8]" | log  
log Rechnungsliste	  
	get-view  $invoiceListViewName | get-table | get-cell -row 1 -column 8 | log
	get-view  $invoiceListViewName | get-table | get-cell -row 1 -column 1  | log	   
	log second 
	get-view  $invoiceListViewName | get-table | get-cell -row 1 -column 1 | get-property text   | log	
	 	log sss
	get-view  $invoiceListViewName | get-table | get-table-data | select-rows  -match regexp
	 -column "Patient"  -value ".*Duck.*" | select-columns "RG Nr" "Patient" | log
	 	
	get-view  $invoiceListViewName | get-table | get-table-data | select-columns "RG Nr" "Patient" | log
	get-view  $invoiceListViewName | get-table | get-table-data | select-columns "RG Nr" "Patient" |
		 write-csv-file [ concat  [get-user-dir] "/rcptt/file1.csv"	]
	get-view  $invoiceListViewName | get-table | get-table-data | select-rows  -match regexp
	 -column "Patient"  -value ".*Duck.*"  |   select-columns "RG Nr" "Patient" |
		 write-csv-file [ concat  [get-user-dir] "/rcptt/file2.csv" ]
	with [get-view  $invoiceListViewName | get-table] {
	// If you passs betrag 60.00 then it will show up down here as 60.0
		get-item  -column "Patient"  -path [ concat $patient ".*"]   | get-property "columns[3]" -raw true | log
		get-item  -column "Patient"  -path [ concat $patient ".*"]   | get-property "columns[8]" -raw true | log
		get-item  -column "Patient"  -path [ concat $patient ".*"]   | get-property "columns[3]" | matches [ concat $patient ".*"]  | verify-true
		get-item  -column "Patient"  -path [ concat $patient ".*"]  | get-property "columns[8]" |  matches $betrag | verify-true
	}
	with [get-view  $invoiceListViewName | get-table] {
	// If you passs betrag 60.00 then it will show up down here as 60.0
		get-item -path 18 | get-property "columns[3]" | matches [ concat $patient ".*"]  | verify-true
		get-item -path 18 | get-property "columns[8]" | matches $betrag | verify-true
	   }
	   /*
		 get-item -path 18 | log
		 get-item -path [ concat ".*" $patient ".*" ] | log
 		get-item -path  [ concat ".*" $patient ".*" ]  | get-property "columns[3]" | matches [ concat $patient ".*"]  | verify-true
		 
	} */
	// get-view $invoiceListViewName | get-table | select 18 | get-menu -path "Ausgeben..." | click
	log zwer
}
	/* Rechnung ausgeben l√§uft nicht im Moment
	with [get-window "Rechnung ausgeben"] {
		get-button OK | click
		with [get-window Statusinformationen] {
		get-window "Dokumentvorlage nicht gefunden" | get-button OK | click
		get-window "Fehler beim Drucken der Rechnung 000003000018" | get-button OK | click
		get-window Fehler | get-button OK | click
		}
	}
	*/

proc SelectPatient [val familyName] [val firstName] {
	open-window-by-name [t view_patients ]
	get-view [t view_patients ] | get-editbox | set-focus
	with [get-view [t view_patients ]] {
		with [get-editbox] {
			set-text $familyName
			key-type TRAVERSE_TAB_NEXT
		}
		get-editbox -index 1 | set-text $firstName
		get-view [t view_patients ] | get-table | get-property itemCount | log
	}
	get-view [t view_patients ] | get-table | get-property itemCount -raw | int | gt 0
	try {
		get-view [t view_patients ]  | get-table | select [ concat  $familyName ".*" $firstName ".*"]
	} -catch {
	  log "SelectPatient not found"
	}
	get-view [t view_patients ] | get-table | get-property itemCount -raw | int | gt 0
}

proc PatientenErstellenFallsNichtVorhanden [val familyName "Wesen" ] [val firstName "Armes" ] [val male [bool true] ] 
	[val birthDate "29.2.1980" ] [val street "Schattenloch" ] [val zipCode "9876" ]
	[val location "Hintertal" ] [val phone "079 12 34 56 78" ] {
	if [SelectPatient -familyName $familyName -firstName $firstName | eq false] {
		PatientenErstellen -familyName $familyName -firstName $firstName -male $male -birthDate $birthDate 
			-street $street -zipCode $zipCode -location $location -phone $phone
	}
}

proc PatientenErstellen [val familyName "Wesen" ] [val firstName "Armes" ] [val male true] 
	[val birthDate "29.02.1980" ] [val street "Schattenloch" ] [val zipCode "9876" ]
	[val location "Hintertal" ] [val phone "079 12 34 56 78" ] {
	open-window-by-name [t view_patients ]
	get-view [t view_patients ] | get-editbox | set-focus
	get-view [t view_patients ] | get-button [ t btn_create_new_patient ]  | click
	with [get-window [t dlg_new_patient ]] {
		with [get-editbox -after [get-label [ t dlg_new_patient_nom ]]] {
			set-text $familyName
		}
		with [get-editbox -after [get-label [ t dlg_new_patient_firstname ]]] {
			set-text $firstName
		}
		if [$male] {
			get-combo -after [get-label [ t dlg_new_patient_sex ]] | select [ t dlg_new_patient_male ]
		} -else {
			get-combo -after [get-label [ t dlg_new_patient_sex ]] | select [ t dlg_new_patient_female ]
		}
		with [get-editbox -after [get-label [ t dlg_new_patient_birthday ]]] {
			set-text $birthDate
		}
		with [get-editbox -after [get-label [ t dlg_new_patient_street ]]] {
			set-text $street
		}
		with [get-editbox -after [get-label [ t dlg_new_patient_plz ]]] {
			set-text $zipCode
		}
		with [get-editbox -after [get-label [ t dlg_new_patient_location ]]] {
			set-text $location
		}
		get-editbox -after [get-label [ t dlg_new_patient_phone ] ] | set-text $phone
		get-eclipse-window | gen-screenshot [concat $imagesDir $familyName "_created.png"]
		get-button [t ok ] | click
	}
	global [ val PatientenErstellenOkay true ] -override
	try {
		get-window "Unplausible Angaben" | get-button [t ok ] | click
		get-window [t dlg_new_patient ] | get-button [t cancel ] | click
		log "PatientenErstellen: Unplausible Angaben gefunden!"
		// TODO: Raise an error if the female could not be created (French)
		global [ val PatientenErstellenOkay false ] -override
	} -catch {
		// Nothing to do
	}
	concat "Res is " $PatientenErstellenOkay | log
	$PatientenErstellenOkay | assert-true
}
// Ende
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--

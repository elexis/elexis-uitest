--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: Fall
Element-Type: context
Element-Version: 2.0
Id: _p5Ui8P79EeiFyvHqIglmCA
Runtime-Version: 2.4.1.201903190000
Save-Time: 4/26/19 10:42 PM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

proc "set-date-picker-date" [val window ] [ val labelBefore -input ] [ val "date" ] {
	concat "set-date-picker-date: " window ": " $labelBefore ": " $date| log
	global [ val myCombo [  get-window $window | get-editbox -after [get-label $labelBefore ] ]] -override
	get-window $window | get-editbox -after [get-label $labelBefore ] | log
	get-window $window | get-editbox -after [get-label $labelBefore ] | set-text $date
	get-window $window | get-editbox -after [get-label $labelBefore ] | key-type Enter
}

proc "SetRightToDeleteCase" {
	get-preferences-menu | click
	with [get-window [ t preferences ] ] {
		get-tree | select [ t select_roles_right ]
		get-tree -after [get-link [t dlg_create_user_accounting_change ] ] | get-item -path  [ t right_delete_case ]
		  | get-property "values['u']" -raw | log
		if [ get-tree -after [get-link [t dlg_create_user_accounting_change ] ] | get-item -path  [ t right_delete_case ]
		  | get-property "values['u']" -raw | equals x | eq true ] {
			log "User has already the right"
		  } -else {
			log "Must git the user the right"
			get-tree -after [get-link [t dlg_create_user_accounting_change ] ] | select [ t right_delete_case ] | check
		  }
		get-button [ t apply_and_close ] | click
	}
}

proc DeleteSelectedCase {
	get-view [ t view_cases ] | click
	get-view [ t view_cases ] | get-table | get-menu -path  [ t btn_delete_case ] | click
}

proc FallZuPatientErstellenFallsNichtVorhanden [val caseLaw [t case_UVG ] ] [ val caseReason [ t reason_UVG ]  ] [val startDate "201.*"] [val endDate "01.08.2018"] {
	if [FallOffen -caseLaw $caseLaw -startDate $startDate ] {
		concat  "Offenen Fall " $caseLaw " gefunden für Startatum " $startDate
	} -else {
		FallZuPatientErstellen -caseLaw $caseLaw -caseReason $caseReason -startDate "20.04.2018"
	}
}
proc FallZuPatientErstellen [val caseLaw [t case_UVG ] ] [ val caseReason [ t reason_UVG ]  ] [val startDate ""] [val endDate ""] {
	open-window-by-name [ t view_cases ]
	concat FallZuPatientErstellen  $caseLaw " " $caseReason " " $startDate  " " $endDate| log
	concat FallZuPatientErstellen  [ t view_cases ] " btn. " [ t btn_create_new_case ] " dlg " [ t dlg_new_case ] | log
	wait 100
	
	get-view [ t view_cases ]| get-button [ t btn_create_new_case ] | click
	wait 100
	
	with [get-window [ t dlg_new_case ] ] {
		concat "caseLaw: " $caseLaw  " caseReason: " $caseReason | log
		get-combo -after [get-label [ t dlg_new_case_caseMethod ] ] | select $caseLaw
		get-combo -after [get-label [ t dlg_new_case_caseReason ] ] | select $caseReason
		if [ $startDate | eq "" ] {
			log "Skip setting startDate as empty"
		} -else {
			set-date-picker-date [ t dlg_new_case ] [ t dlg_new_case_startDate ] $startDate
		}
		if [ $endDate | eq "" ] {
			log "Skip setting endDate as empty"
		} -else {
			set-date-picker-date [ t dlg_new_case ] [ t dlg_new_case_endDate ] $endDate
		}
		concat $imagesDir "Fall_" $caseLaw "_" $startDate "_created.png" | log
		get-eclipse-window | gen-screenshot [concat $imagesDir "Fall_" $caseLaw "_" $startDate "_created.png"]
		get-button  [ t ok] | click
	}
}

proc SelectFall [val caseLaw] [val startDate] {
	let [ val searchPattern [ concat ".*" $caseLaw ".*" $startDate ".*"] ] {
		try {
			get-view [ t view_cases ] | get-table | select $searchPattern | click
		} -catch {
			// TODO: Why is this workaround necessary?
			get-view [ t view_cases ] | close
			open-window-by-name [ t view_cases ]
			get-view [ t view_cases ] | get-table | select $searchPattern | click
		}
	}
}

proc FallOffen [val caseLaw] [val startDate] {
	let [val searchPattern [concat $caseLaw ".*" $startDate ".*"]] {
		try {
			concat "MySearchpattern is: " $searchPattern | log
			get-view [ t view_cases ] | get-table | get-item $searchPattern | get-property caption
			get-view [ t view_cases ] | get-table | get-item $searchPattern | select-item
			bool true  // 0 stands for true
		} -catch {
			bool false // 1 stands for false
		}
	}
}

proc AktuellenFallSchliessen [ val endDate "" ] {
	get-view [ t view_cases ] | get-table | get-menu -path [ t mnu_close_case ] | click
	with [get-window [ t fall_abschlssdatum ] ] {
	    get-editbox | set-focus
	    get-editbox | set-text $endDate
	    get-button OK | click
	}
}
proc AktuellenFallVerrechnen {
	let [val nrItemsBefore [ GetNrOfInvoices -status [ t Offen ] ] ] {
		concat "AktuellenFallVerrechnen: before " $nrItemsBefore " items"| log
		get-view [ t view_cases ] | get-table | get-menu -path [ t btn_create_invoice ] | click
		try {
			get-window [ t error ] | get-label -index 1 |  get-property caption -raw | log
			log "AktuellenFallVerrechnen: Failed. See message above" -severity error
			close-window-if-open [ t error ]
		} -error [val errorObj]  -catch {
			// concat "Catched error: " $errorObj
		}
		let [val nrItemsAfter [ GetNrOfInvoices -status [ t Offen ] ] ] {
			concat "AktuellenFallVerrechnen: after have " $nrItemsAfter " items"| log
			$nrItemsBefore | plus 1 | equals $nrItemsAfter | assert-true -message
				[ concat "AktuellenFallVerrechnen: After invoicing expected "  [$nrItemsBefore | plus 1 ] " items but found " $nrItemsAfter]
		}
	}
	// get-window [ t error ] | verify-false
}

global [val auf_id 1 ] -override
proc "FallErzeugeAUF" [ val percentage 100 ] [ val reason "RCPTT Test-Grund" ] [ val comment "" ] [ val startDate "" ] [ val endDate ""]  {
	concat "FallErzeugeAUF. Warum ist hier manchmal kein Fall ausgewählt? " $auf_id | log
	get-eclipse-window | gen-screenshot [concat $imagesDir "AUF-" $auf_id "-before-create.png"]
	with [get-view [ t AUF ]] {
		click
		get-button [ t btn_create_new_auf ] | click
	}
	with [get-window [ t Arbeitsunfaehigkeit ] ] {
		with [get-editbox -after [get-label [ t Prozent ]]] {
			set-text $percentage
		}
		with [get-editbox -after [get-label [ t Grund ]] -index 1] {
			set-text $reason
		}
		get-editbox -after [get-label [ t Zusaetzliche_Angaben ] ] | set-text $comment
		get-eclipse-window | gen-screenshot [concat $imagesDir "AUF-" $auf_id ".png"]
		global [val auf_id [  $auf_id | plus 1 ] ] -override
		get-button OK | click
	}
}
proc "ErzeugeBriefZuAUT" [ val reason ".+" ] [ val adrName "Aquilana" ] [ val adrPostalcode "5401" ] {
	with [get-view [ t AUF ]] {
		// Select first matching
		get-table | select [ concat ".*" $reason ".*" ]
		get-button [ t open_window_for_AUF ] | click
	}
	with [get-window [ t select_contact ]] {
		get-table | select  [ concat ".*" $adrName ".*"  $adrPostalcode ".*" ]
		get-button OK | click
	}
}

proc "FallSetCostBearer" [ val name "AEROSANA" ] [ val fall ".*" ] {
	get-view [ t view_cases ] | get-table | select [ concat $fall ".*" ] | double-click
	get-view  [ t Fall ]  | get-link [ t fall_cost_bearer ] | click
	with [get-window [t select_contact ] ] {
	    with [get-editbox -after [get-label [ t select_andere_kontakte ] ] -index 1] {
	        set-text $name
	    }
	    get-table | select [ concat ".*" $name ".*" ]
	    get-button OK | click
	}
}
proc "FallSetVersicherungsNummer" [ val nummer 123456 ] [ val fall ".*" ] {
	get-view [ t view_cases ] | get-table | select [ concat $fall ".*" ] | double-click
	try {
		// This works in french wher Cas is name for view Fälle (les cas) und Fall (le cas)
		get-view [ t Fall ] -index 1 | get-button [ t Kopie_an_Patienten ] | check
		 // TODO: French problem: INFO  ch.elexis.data.PersistentObject - field is not mapped Désignation
		get-view [ t Fall ] -index 1 | get-editbox -after [get-label [ t Versicherungsnummer -language de ] ] | set-text $nummer
	} -catch {
		// This work in german
		get-view [ t Fall ] | get-button [ t Kopie_an_Patienten ] | check
		try {
			get-view [ t Fall ] | get-editbox -after [get-label [ t Versicherungsnummer ] ] | set-text $nummer -control
		} -catch {
			log "Versicherungsnummer is not present for the case"
		}
	}
}

proc "PatientMitFallUndKonsErstellenOderAuswaehlen" [ val familyName "Testarossa" ]
	[ val firstName "Antonio" ]
	[ val male true ]
	[ val birthDate "30.03.1990" ]
	[ val street  "Nebenstrasse 33" ]
	[ val plz "9876" ]
	[ val location Elexiskon ]
	[ val phone "055 323 45 67" ]
	[ val caseName "kvg" ]
	[ val caseReason [ t reason_KVG ] ]
	[ val caseStartDate "14.10.2018" ]
	[ val konsDate "" ] // by default will be today
{
	if [SelectPatient $familyName $firstName | eq false] {
		PatientenErstellen $familyName $firstName $male $birthDate $street $plz $location $phone
	}
	
	if [FallOffen -caseLaw $caseName -startDate $caseStartDate ] {
		log "Offenen Fall KVG gefunden"
	} -else {
		FallZuPatientErstellen -caseLaw $caseName -caseReason $caseReason -startDate $caseStartDate
		concat "FallZuPatientErstellen " $familyName " " $firstName  " " caseName | log
	}
	SelectFall  $caseName $caseStartDate
	if [ HasKonsSelected | eq false] {
		kons-erstellen [ concat "PatientMitFallUndKonsErstellenOderAuswaehlen "  $familyName " " $firstName " mit " $caseName  " of " $caseStartDate " kons of" $konsDate ]
	} -else {
		log "HasKonsSelected returned true"
	}
	kons-set-date $konsDate
}


// End
//
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--

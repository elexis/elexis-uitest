--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: Hilotec_ODF
Element-Type: context
Element-Version: 2.0
Id: _LkBSkBsDEembU9g-6bJhVg
Runtime-Version: 2.4.1.201903190000
Save-Time: 4/29/19 3:56 PM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

global [val hilotecOdfOutDir $pdfDir ] -override

proc CloseLibreOffice {
	exec-process -command killall -args oosplash -ignoreExitCode -ignoreStderr
}

CloseLibreOffice // Ensure that we have no LibreOffice process open when running our tests

proc ConfigureHilotecODF_TextVerarbeitung {
	get-preferences-menu | click
	with [get-window [ t preferences ]] {
		get-tree | select [ t Textverarbeitung ]
		// Button name various on number of installed text plugins!
		// There replace 0 :, etc by .*
	  	get-window [ t preferences ] | gen-screenshot [concat $imagesDir "select-hilotecODF.png" ]
	    with [get-button "Brief extern speichern (gleicher UNC Pfad auf allen Stationen)"] {
	        check
	    }
	    with [get-editbox -after [get-label [ t pref_externes_textprogramm ] ] ] {
	        set-text [ concat  [get-user-dir] "/extern" ]
	    }
	    with [get-button [ t pref_texte_lokal_editieren ] ] {
	        check
	    }
		get-tree | select "Hilotec-OpenDocument"
		with [get-editbox -after [get-label "OpenDocument Editor"]] {
			set-text "/usr/bin/lowriter"
		}
		with [get-editbox -after [get-label "Argumente zum Drucken"]] {
			set-text [ concat "--headless --convert-to pdf --outdir " $hilotecOdfOutDir ]
		}
		with [get-editbox -after [get-label "Argumente fuer PDF-Konvertierung"]] {
			set-text [ concat "--headless --convert-to pdf --outdir " $hilotecOdfOutDir ]
		}
		with [get-editbox -after [get-label "PDF-Konverter"]] {
			set-text "/usr/bin/lowriter"
		}
		get-button "Wrapper Skript aktivieren" | uncheck
	  	get-window [ t preferences ] | gen-screenshot [concat $imagesDir "config-hilotecODF.png" ]
		get-button [ t apply_and_close ] | click
	}
}

proc ImportHilotecODF_Vorlagen [ val vorlage [ concat $rcpttDir "openoffice/AUF-Zeugnis.odt" ] ] {
	concat "ImportHilotecODF_Vorlagen should import: " $vorlage | log
	get-file $vorlage | get exists | assert-true -message [ concat "File " $vorlage " not found" ]
	open-window-by-name [ t Dokumente_Textvorlagen_Management ]
	set-dialog-result File $vorlage
	get-view "Textvorlagen Management" | get-button "Beliebige Vorlage.*importieren" | click
	try -command {
		get-window Systemvorlage | get-button [ t yes ] | click
	} -catch { 
		log "Keine Systemvorlage"
	}
	try -command {
		with [get-window -class TextTemplateImportConflictDialog] {
			get-button "Ersetzen.*" | click
			get-button OK | click
		}
		concat "Vorlage: " $vorlage " existiert bereits, wurde ersetzt" | log
	
	} -catch { 
		log "Vorlage existiert noch nicht"
	}
	OpenAndResetStartPerspektive
}
// Ende
//
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--
